/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import java.nio.file.Paths

plugins {
    id('java-library')
    id('idea')
    id('maven-publish')
}

group 'org.apache.cassandra.sidecar'
version project.version

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
    reports {
        junitXml.enabled = true
        def destDir = Paths.get(rootProject.rootDir.absolutePath, "build", "test-results", "vertx-auth-mtls").toFile()
        println("Destination directory for vertx-auth-mtls tests: ${destDir}")
        junitXml.destination = destDir
        html.enabled = true
    }
}

configurations {
    all*.exclude(group: 'ch.qos.logback')
}

dependencies {
    implementation(group: 'io.vertx', name: 'vertx-auth-common', version: '4.5.8')
    implementation(group: 'io.vertx', name: 'vertx-core', version: '4.5.8')
    testImplementation(group: 'io.vertx', name: 'vertx-junit5', version: '4.5.8')
    testImplementation(group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.11.0-M2')
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.26.3'
    compileOnly('org.jetbrains:annotations:23.0.0')
    implementation group: 'com.google.guava', name: 'guava-annotations', version: 'r03'
    compile group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.1.0'
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            groupId project.group
            artifactId "${archivesBaseName}"
            version System.getenv("CODE_VERSION") ?: "${version}"
        }
    }
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

check.dependsOn(checkstyleMain, checkstyleTest, jacocoTestReport)
